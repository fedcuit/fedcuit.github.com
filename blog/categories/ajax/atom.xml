<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ajax | Feng erdong's Blog]]></title>
  <link href="http://fedcuit.github.com/blog/categories/ajax/atom.xml" rel="self"/>
  <link href="http://fedcuit.github.com/"/>
  <updated>2014-06-27T14:06:46+08:00</updated>
  <id>http://fedcuit.github.com/</id>
  <author>
    <name><![CDATA[Feng erdong]]></name>
    <email><![CDATA[fedcuit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Several ways to define ajax interceptors in AngularJS]]></title>
    <link href="http://fedcuit.github.com/blog/2013/11/21/config-ajax-interceptor-in-angularjs/"/>
    <updated>2013-11-21T21:53:00+08:00</updated>
    <id>http://fedcuit.github.com/blog/2013/11/21/config-ajax-interceptor-in-angularjs</id>
    <content type="html"><![CDATA[<p>Original blog: <a href="http://codingsmackdown.tv/blog/2013/01/02/using-response-interceptors-to-show-and-hide-a-loading-widget/">Using Response Interceptors to Show and Hide a Loading Widget</a></p>

<p>```javascript
var myApp = angular.module("myApp", []);
myApp.config(['$httpProvider',</p>

<pre><code>function ($httpProvider) {
    var $http,
        interceptor = ['$q', '$injector',
            function ($q, $injector) {
                function success(response) {
                    // get $http via $injector because of circular dependency problem
                    $http = $http || $injector.get('$http');
                    if ($http.pendingRequests.length &lt; 1) {
                        console.log('ajax cal respond with success');
                    }
                    return response;
                }

                function error(response) {
                    console.log('x', response);
                    // get $http via $injector because of circular dependency problem
                    $http = $http || $injector.get('$http');
                    if ($http.pendingRequests.length &lt; 1) {
                        console.log('ajax call respond with error');
                    }
                    return $q.reject(response);
                }

                return function (promise) {
                    console.log('before send ajax request');
                    return promise.then(success, error);
                };
            }
        ];

    $httpProvider.responseInterceptors.push(interceptor);
}
</code></pre>

<p>]);
```</p>

<p>Check out the <a href="http://jsbin.com/aVAteLEH/3/embed?html,js">demo</a></p>
]]></content>
  </entry>
  
</feed>

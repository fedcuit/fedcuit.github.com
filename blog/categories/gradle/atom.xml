<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gradle | Feng erdong's Blog]]></title>
  <link href="http://fedcuit.github.com/blog/categories/gradle/atom.xml" rel="self"/>
  <link href="http://fedcuit.github.com/"/>
  <updated>2013-06-17T23:00:17+08:00</updated>
  <id>http://fedcuit.github.com/</id>
  <author>
    <name><![CDATA[Feng erdong]]></name>
    <email><![CDATA[fedcuit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Useful gradle configuration]]></title>
    <link href="http://fedcuit.github.com/blog/2013/05/31/useful-gradle-config/"/>
    <updated>2013-05-31T21:56:00+08:00</updated>
    <id>http://fedcuit.github.com/blog/2013/05/31/useful-gradle-config</id>
    <content type="html"><![CDATA[<h1>Basic configuration</h1>

<ul>
<li>Must have: <code>java plugin</code>, <code>maven repo</code>, <code>dependencies</code>
```groovy
apply plugin: 'java'</li>
</ul>


<p>repositories {</p>

<pre><code>mavenCentral()
</code></pre>

<p>}</p>

<p>dependencies {
  testCompile 'info.cukes:cucumber-java:1.1.3'\</p>

<pre><code>, 'info.cukes:cucumber-junit:1.1.3'\
, 'junit:junit:4.11'\
, 'org.seleniumhq.selenium:selenium-java:2.32.0'\
, 'org.easytesting:fest-assert:1.4'
</code></pre>

<p>}</p>

<p>```</p>

<ul>
<li>Enable to run cucumber (with selenium)
```groovy
configurations {
cucumberRuntime {
  extendsFrom testRuntime
}
}</li>
</ul>


<p>task cucumber() {
  dependsOn assemble, compileTestJava</p>

<pre><code>doLast {
  javaexec {
    main = "cucumber.api.cli.Main"
      jvmArgs = ["-Dwebdriver.chrome.driver=/Users/edfeng/Downloads/chromedriver"]
      //Must set if you want to use chrome webdriver
      classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
      args = ["-g", "gradle.cucumber", "src/test/resources"]
      // 1. must set package name of glue code(where steps are defined). 2. must set directory of feature files.
  }
}
</code></pre>

<p>}</p>

<p>```</p>

<h1>Advanced configuration</h1>

<ul>
<li>Create gradle based project from template</li>
</ul>


<p>Simply add the following to your <code>~/.gradle/init.gradle</code> script:</p>

<p>```groovy
  gradle.beforeProject { prj -></p>

<pre><code>prj.apply from: 'http://www.tellurianring.com/projects/gradle-plugins/gradle-templates/apply.groovy'
</code></pre>

<p>  }
```</p>

<p>Type <code>gradle tasks</code> in any place where you want to create a gradle project, choose one from <code>Template Tasks</code>.</p>

<ul>
<li>Show dependencies <code>gradle dependencies</code></li>
<li>Specify source and test folders.
```groovy
sourceSets {
main {
  java {

<pre><code>srcDir 'mysubfolder/src/main/java'
</code></pre>

  }
  resources {

<pre><code>srcDir 'mysubfolder/src/main/resources'
</code></pre>

  }
}
test {
  java {

<pre><code>srcDir 'mysubfolder/src/test/java'
</code></pre>

  }
  resources {

<pre><code>srcDir 'mysubfolder/src/test/resources'
</code></pre>

<p>  }
}
}
```</p></li>
<li><p>Configue dependencies using local jar files
<code>groovy
dependencies {
compile fileTree (dir: 'file:/home/edfeng/somedir', includes: ['*.jar'])
testCompile fileTree (dir: 'file:../../somedir', includes: ['ViewController.jar'])
}
</code></p></li>
<li><p>Show all rumtime dependencies(This can also print out local libaries)
```groovy
task printAllDependencies() {</p>

<pre><code>configurations.runtime.each { File f -&gt; println f }
</code></pre>

<p>}
```</p></li>
</ul>

]]></content>
  </entry>
  
</feed>

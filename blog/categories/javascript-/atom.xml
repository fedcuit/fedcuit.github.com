<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript, | Feng erdong's Blog]]></title>
  <link href="http://fedcuit.github.com/blog/categories/javascript-/atom.xml" rel="self"/>
  <link href="http://fedcuit.github.com/"/>
  <updated>2015-07-27T20:22:23+08:00</updated>
  <id>http://fedcuit.github.com/</id>
  <author>
    <name><![CDATA[Feng erdong]]></name>
    <email><![CDATA[fedcuit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript集合操作]]></title>
    <link href="http://fedcuit.github.com/blog/2012/10/27/javascript-collection-operation/"/>
    <updated>2012-10-27T18:12:00+08:00</updated>
    <id>http://fedcuit.github.com/blog/2012/10/27/javascript-collection-operation</id>
    <content type="html"><![CDATA[<p>记录一些不常见的javascript集合操作.</p>

<h4>数组操作</h4>

<p><code>javascript
arr = ['a', 'b', 'c']
</code>
常见的遍历数组的办法如下:
``` javascript
for (var index = 0; index &lt; arr.length; index++) {</p>

<pre><code>console.log(arr[index]); 
</code></pre>

<p>}</p>

<blockquote><blockquote><p>a
b
c
<code>
我们知道在javascript中，对象跟数组都是构建在类似hashtable的数据结构上的, 即它们都是基于键值对的，所以在这一点上，我们可以把数组看成跟对象是一样的，对于一个javascript object, 我们使用 ` for (var prop in object)`这种语法来遍历一个对象中的内容，这种方式对数组一样适用:
</code> javascript
for (var idx in arr) {</p>

<pre><code>console.log(arr[idx]); 
</code></pre>

<p>}
a
b
c
```</p></blockquote></blockquote>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: unit | Feng erdong's Blog]]></title>
  <link href="http://fedcuit.github.com/blog/categories/unit/atom.xml" rel="self"/>
  <link href="http://fedcuit.github.com/"/>
  <updated>2013-08-08T21:57:13+08:00</updated>
  <id>http://fedcuit.github.com/</id>
  <author>
    <name><![CDATA[Feng erdong]]></name>
    <email><![CDATA[fedcuit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[实用Shell脚本片段]]></title>
    <link href="http://fedcuit.github.com/blog/2012/09/28/useful-shell-snippets/"/>
    <updated>2012-09-28T22:22:00+08:00</updated>
    <id>http://fedcuit.github.com/blog/2012/09/28/useful-shell-snippets</id>
    <content type="html"><![CDATA[<h5>Tips</h5>

<ul>
<li>赋值等号两端不能有空格</li>
<li>使用双引号而不是单引号</li>
<li>有时候需要明确使用${var}而不是$var</li>
</ul>


<h5>解释器选项</h5>

<ul>
<li><code>-e</code> Exit on error</li>
<li><code>-x</code> Expand command
``` bash

<h1>! /bin/bash -ex</h1>

<p>```</p></li>
</ul>


<hr />

<h5>条件判断</h5>

<ul>
<li><code>[ -d ~/directory ] || mkdir ~/directory</code> 如果目录不存在，则创建此目录</li>
<li><code>[ -f ~/file ] || touch ~/file</code> 如果文件不存在，则创建此文件</li>
<li><code>[[ str =~ substr ]]</code>判断字符串中包含另一个字符串
```bash
function verify_md5(){
  if [[ $1 =~ $2 ]]
  then

<pre><code>  echo "MD5 verification SUCCESS for $1."
</code></pre>

  else

<pre><code>  echo "MD5 verification FAILED for $1."
</code></pre>

<p>  fi
}
```</p></li>
</ul>


<hr />

<h5>文件操作</h5>

<p>想了解更多跟条件判断相关的bash命令，可以在<code>man bash</code>之后的查找对应的<em>CONDITIONAL EXPRESSIONS</em>部分.</p>

<ul>
<li><code>sed -i .bak 's/old/new/g' file</code> 首先生成file的备份文件file.bak, 然后将file文件中出现的所有old替换成new</li>
<li><code>echo "some content" &gt;&gt; ~/file</code> 向文件末尾添加内容</li>
<li><code>mv original_file_name{,.new_suffix}</code> 将original_file_name重命名为original_file_name.new_suffix</li>
</ul>


<hr />

<h5>函数操作</h5>

<ul>
<li><p>函数的定义与调用
风格上与Javascript相似，但是函数的定义与调用都不需要加括号，<strong>shell函数不使用括号</strong>
<code>bash
function main {
  echo "in main function"
}
main
</code></p></li>
<li><p>参数的传递
Shell函数没有参数列表这个概念, 在函数内部通过$n来接受第n个位置上的参数
```bash
function greeting {
  echo "Hello, $1, your id is $2"
}</p></li>
</ul>


<p>function main {</p>

<pre><code>greeting "Feng Erdong" edfeng
greeting "Zhang xiaoming" xmzhang
</code></pre>

<p>}</p>

<p>main</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: xpath | Feng erdong's Blog]]></title>
  <link href="http://fedcuit.github.com/blog/categories/xpath/atom.xml" rel="self"/>
  <link href="http://fedcuit.github.com/"/>
  <updated>2012-09-30T18:18:44+08:00</updated>
  <id>http://fedcuit.github.com/</id>
  <author>
    <name><![CDATA[Feng erdong]]></name>
    <email><![CDATA[fedcuit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xpath 与 jQuery selector 的对应关系]]></title>
    <link href="http://fedcuit.github.com/blog/2012/09/30/xpath-vs-jquery-selector/"/>
    <updated>2012-09-30T17:00:00+08:00</updated>
    <id>http://fedcuit.github.com/blog/2012/09/30/xpath-vs-jquery-selector</id>
    <content type="html"><![CDATA[<ul>
<li><em>如果默认是从根找起的话, xpath需要以<code>//</code>开头</em></li>
<li><em>如果使用属性选择器, jQuery的属性值可以不使用引号，但是xpath中属性值必须用引号括起来</em></li>
</ul>


<h2>基本选择器</h2>

<ul>
<li><strong>id</strong>

<ul>
<li><code>$('#import-datasenders')</code></li>
<li><code>$x('//a[@id="import-datasenders"]')</code></li>
</ul>
</li>
<li><strong>class</strong>

<ul>
<li><code>$('a.register_data_sender')</code></li>
<li><code>$x('//a[@class="register_data_sender"]')</code></li>
</ul>
</li>
<li><strong>tag</strong>

<ul>
<li><code>$('a')</code></li>
<li><code>$x('//a')</code></li>
</ul>
</li>
<li><strong>*</strong>

<ul>
<li><code>$('#import-datasenders')</code></li>
<li><code>$x('//*[@id="import-datasenders"]')</code></li>
</ul>
</li>
<li><strong>选择器组</strong>

<ul>
<li><code>$('#import-datasenders, .register_data_sender')</code></li>
<li><code>$x('//*[@id="import-datasenders"]|//*[@class="register_data_sender"]')</code></li>
</ul>
</li>
</ul>


<h2>层次选择器</h2>

<ul>
<li><strong>后代元素</strong>

<ul>
<li><code>$('#my_subjects li')</code></li>
<li><code>$x('//*[@id="my_subjects"]//li')</code></li>
</ul>
</li>
<li><strong>直接子元素</strong>

<ul>
<li><code>$('.secondary_tab&gt;li')</code></li>
<li><code>$x('//*[@class="secondary_tab"]/li')</code></li>
</ul>
</li>
<li><strong>下一个兄弟元素</strong>

<ul>
<li><code>$('input+image')</code>
jQuery selector中的 <code>+</code> 类似于正则表达式中的前置零宽断言, <code>+</code> 前面的元素是用来做限制条件的</li>
<li><code>$x('//input/following-sibling::img')</code>
xpath的这种写法与上面的jQuery写法非常的相似，但是功能并不完全相同. jQuery 会取当前元素的下一个符合条件的兄弟结点, 而xpath会从当前元素的所有兄弟结点中查找符合条件的，但是不保证这个兄弟结点是当前结点的下一个结点.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
